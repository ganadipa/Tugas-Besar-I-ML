class NeuralNetwork:
	layers: List[NetworkLayer]
	weight_matrices: List[Matrix[Int]] # len(ini) = len(layers) - 1	
# Matrix[Int] -> m*n where m = len(layers[i]) and n = len(layers[i+1])
	gradient_matrices: List[Matrix[Int]]
	
	constructor(n: depth)
	
	setLossFunction(f: loss function = MSE)
	
	initialize_weights()
	
	show()
	
	plot_weights(arr: List[Int])
	
	plot_gradients(arr: List[Int])
	
	save(file: str)
	
	load(file: str)
	
	forward_propagation(arr: List[Input]) -> List[Output]

class FFNN:
	construct
	
	
	
	
	

class NetworkLayer:
	constructor(n: banyaknya node, f: fungsi aktivasi)
